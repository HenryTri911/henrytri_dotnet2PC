@page "/wallet"

@inject NavigationManager Navigation

<h3 class="text-center">Ứng dụng Ví Tiền</h3>

<div class="container mt-4">
    <div class="card p-3">
        <h4>Số dư hiện tại: <span class="text-success">@Balance.ToString("C")</span></h4>
        <button class="btn btn-primary" @onclick="ShowDepositModal">Nạp Tiền</button>
        <button class="btn btn-danger ms-2" @onclick="ShowWithdrawModal">Rút Tiền</button>
    </div>

    <h5 class="mt-4">Lịch sử giao dịch</h5>
    <ul class="list-group">
        @foreach (var transaction in Transactions)
        {
            <li class="list-group-item">
                @transaction.Type - @transaction.Amount.ToString("C") - @transaction.TimeStamp.ToString("dd/MM/yyyy HH:mm")
            </li>
        }
    </ul>
</div>

<!-- Modal -->
@if (IsModalVisible)
{
    <div class="modal fade show d-block" tabindex="-1" style="background: rgba(0,0,0,0.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@ModalTitle</h5>
                    <button type="button" class="btn-close" @onclick="CloseModal"></button>
                </div>
                <div class="modal-body">
                    <input type="number" class="form-control" @bind="TransactionAmount" placeholder="Nhập số tiền..." />
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" @onclick="CloseModal">Hủy</button>
                    <button class="btn btn-primary" @onclick="ConfirmTransaction">OK</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private decimal Balance = 0;
    private List<Transaction> Transactions = new();
    private bool IsModalVisible = false;
    private string ModalTitle = "";
    private decimal TransactionAmount = 0;
    private bool IsDeposit = true;

    private void ShowDepositModal()
    {
        ModalTitle = "Nạp Tiền";
        IsDeposit = true;
        TransactionAmount = 0;
        IsModalVisible = true;
    }

    private void ShowWithdrawModal()
    {
        ModalTitle = "Rút Tiền";
        IsDeposit = false;
        TransactionAmount = 0;
        IsModalVisible = true;
    }

    private void CloseModal()
    {
        IsModalVisible = false;
    }

    private void ConfirmTransaction()
    {
        if (TransactionAmount > 0)
        {
            if (!IsDeposit && TransactionAmount > Balance)
            {
                return;
            }
            
            Balance += IsDeposit ? TransactionAmount : -TransactionAmount;
            Transactions.Add(new Transaction
            {
                Type = IsDeposit ? "Nạp tiền" : "Rút tiền",
                Amount = TransactionAmount,
                TimeStamp = DateTime.Now
            });
        }
        CloseModal();
    }

    private class Transaction
    {
        public string Type { get; set; }
        public decimal Amount { get; set; }
        public DateTime TimeStamp { get; set; }
    }
}
